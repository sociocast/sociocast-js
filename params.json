{"name":"Sociocast-js","tagline":"Sociocast JavaScript Library","body":"![Alt text](/images/logo.png)\r\n\r\n# Sociocast JavaScript Library\r\n\r\n##Overview\r\nHere you will find the source code for the Sociocast JavaScript Library, which provides clients with a JavaScript wrapper for the Sociocast REST API functionality. Please see the [Sociocast JavaScript Helper Library](https://github.com/sociocast/sociocast-js-helpers) for general supportive utilities and functions.\r\n\r\n##Loading and Initializing the Library\r\n\r\n###Loading the Library in Sandbox Environment\r\nTo load the Sociocast JavaScript Library in our Sandbox enviroment, use the following code:\r\n\r\n    // code to add to footer of your html document\r\n    (function(a,b,c){function i(a){c[a]=function(){return c.is_loaded?_sociocast[a].apply(_sociocast,Array.prototype.slice.call(arguments,0)):(c.push([a].concat(Array.prototype.slice.call(arguments,0))),void 0)}}window.sociocast=c,c.is_loaded=!1;var f=function(a){for(var b=0;a.length>b;b++)_sociocast[a[b].shift()].apply(_sociocast,a[b])},g=document.createElement(\"script\"),h=[\"init\",\"entity_observe\",\"entity_attributes_add\",\"entity_attributes_set\",\"entity_attributes_del\",\"entity_attributes_modify\",\"entity_profile\"];for(g.type=\"text/javascript\",g.src=b,g.async=!0,g.onreadystatechange=g.onload=function(){var a=g.readyState;f.done||a&&!/loaded|complete/.test(a)||(f.done=!0,f(c),c.is_loaded=!0)},(document.body||head).appendChild(g),e=0;h.length>e;e++)i(h[e])})(document,\"http://api-sandbox.sociocast.com/1.0/js/sc.js\",window.sociocast||[]);\r\n\r\nAdditionally, you can grab this code from your [Sociocast Console](https://console.sociocast.com). \r\n\r\n###Loading the Library in Production Environment\r\n\r\nTo load the Sociocast JavaScript Library in our Production enviroment, use the following code:\r\n\r\n    // code to add to footer of your html document\r\n    (function(a,b,c){function i(a){c[a]=function(){return c.is_loaded?_sociocast[a].apply(_sociocast,Array.prototype.slice.call(arguments,0)):(c.push([a].concat(Array.prototype.slice.call(arguments,0))),void 0)}}window.sociocast=c,c.is_loaded=!1;var f=function(a){for(var b=0;a.length>b;b++)_sociocast[a[b].shift()].apply(_sociocast,a[b])},g=document.createElement(\"script\"),h=[\"init\",\"entity_observe\",\"entity_attributes_add\",\"entity_attributes_set\",\"entity_attributes_del\",\"entity_attributes_modify\",\"entity_profile\"];for(g.type=\"text/javascript\",g.src=b,g.async=!0,g.onreadystatechange=g.onload=function(){var a=g.readyState;f.done||a&&!/loaded|complete/.test(a)||(f.done=!0,f(c),c.is_loaded=!0)},(document.body||head).appendChild(g),e=0;h.length>e;e++)i(h[e])})(document,\"http://api-sandbox.sociocast.com/1.0/js/sc.js\",window.sociocast||[]);\r\n\r\nAdditionally, you can grab this code from your [Sociocast Console](https://console.sociocast.com). \r\n\r\n###Initializing the Library\r\n\r\nTo initialize the library, call the `sociocast.init` with your client id, api key, and secret. You can retrieve these from your [Sociocast Console](https://console.sociocast.com). You can obtain an account by going to the [Sociocast website](http://www.sociocast.com).  \r\n\r\n    /**\r\n     * Intantiate the sociocast api client\r\n     *\r\n     * @param string client id\r\n     * @param string api client key\r\n     * @param string secret hash\r\n     *\r\n     */\r\n     sociocast.init(**YOUR_CLIENT_ID**, **YOUR_API_KEY**, **YOUR_API_SECRET**);\r\n     \r\nAdditionally, you can grab your exact client code from your [Sociocast Console](https://console.sociocast.com).      \r\n\r\n##Methods\r\n\r\n###`sociocast.entity_observe`\r\nThe `sociocast.entity_observe` method wraps the Sociocast `/entity/observe` REST API call. The `sociocast.entity_observe` call takes in three parameters:\r\n\r\n* `evt` - the event type for the entity observation (i.e. view, search, share, click, etc)\r\n* `eid` - the entity ID for which the event is being observed.\r\n* `obs` - the observation as a key-valued JavaScript Array. \r\n\r\nThe method is called as follows:\r\n\r\n    sociocast.entity_observe(evt, eid, obs);\r\n    \r\nFor example, to send a page view event with the Page Title and Page Path (using the Sociocast JavaScript Helper Library):\r\n\r\n    var attribs = {};\t\t\t\r\n    attribs.page_title = sociocast_helper.getPageTitle();\r\n    attribs.path_name = sociocast_helper.getPath();\t\t\r\n    sociocast.entity_observe(\"view\", entityID, attribs);\t\r\n\r\n\r\n###`sociocast.entity_attributes_add`\r\nThe `sociocast.entity_attributes_add` wraps the Sociocast `/entity/attributes` REST API Call. Specifically, it allows you to add attributes to an entity. The `sociocast.entity_attributes_add` takes in two parameters:\r\n\r\n* `eid` - the entity ID for which the attributes are being added.\r\n* `attribs` - the attributes being added as a key-valued JavaScript Array.\r\n\r\nIf the key already exists, the function adds the value to the existing set of values. For instance: \r\n\r\n    sociocast.entity_attributes_add(\"91ea3bc9-e947\", { \"zip_lived\" : 10010 });\r\n\r\n###`sociocast.entity_attributes_set`\r\nThe `sociocast.entity_attributes_set` wraps the Sociocast `/entity/attributes` REST API Call. Specifically, it allows you to set attributes on an entity. The `sociocast.entity_attributes_set` takes in two parameters:\r\n\r\n* `eid` - the entity ID for which the attributes are being set.\r\n* `attribs` - the attributes being set as a key-valued JavaScript Array.\r\n\r\nIf the key already exists, the function replaces the value. For instance: \r\n\r\n    sociocast.entity_attributes_set(\"91ea3bc9-e947\", { \"age\" : \"25-30\" });\r\n\r\n###`sociocast.entity_attributes_del`\r\nThe `sociocast.entity_attributes_del` wraps the Sociocast `/entity/attributes` REST API Call. Specifically, it allows you to delete attributes for an entity. The `sociocast.entity_attributes_del` takes in two parameters:\r\n\r\n* `eid` - the entity ID for which the attributes are being deleted.\r\n* `attribs` - the attributes being deleted as a key-valued JavaScript Array.\r\n\r\nFor instance:\r\n\r\n    sociocast.entity_attributes_del(\"91ea3bc9-e947\", { \"zip_lived\" : 10010 });\r\n    \r\nYou can use a `*` to delete all the values for a specific key. \r\n    \r\n    sociocast.entity_attributes_del(\"91ea3bc9-e947\", { \"bluekai_segment\" : \"*\" });\r\n\r\n###`sociocast.entity_attributes_modify`\r\nThe `sociocast.entity_attributes_modify` wraps the Sociocast `/entity/attributes` REST API Call. Specifically, it allows you to add, set, and delete entity attributes in a single call.  The `sociocast.entity_attributes_modify` takes in two parameters:\r\n\r\n* `eid` - the entity ID for which the attributes are being modified.\r\n* `attribs` - the attributes being modified as a key-valued JavaScript Array.\r\n\r\nFor instance:\r\n\r\n    sociocast.entity_attributes_modify(\"91ea3bc9-e947\", {\r\n\t    'set' : { \"age\" : \"25-30\" },\r\n\t    'add' : { \"zip_lived\" : 10010 },\r\n\t    'del' : { \"bluekai_segment\" : \"Auto Intender\" }\r\n    });\r\n\r\n###`sociocast.entity_profile`\r\nThe `sociocast.entity_profile` wraps the Sociocast `/entity/profile` REST API Call. Specifically, it allows you to retrieve a profile on the entity. The method accepts 4 parameters:\r\n\r\n* `eid` - the entity ID for which the entity profile is being retrieved. \r\n* `humread` - (boolean) whether to retrive human readable values for content classifications or Sociocast's internal identifiers. \r\n* `attribs` - the attributes for which you want to retrieve values for the entity's profile. \r\n* `settings` - a JavaScript array. \r\n    * `success` - (Function) function to call upon success. \r\n    * `error` - (Function) function to call upon error. \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}